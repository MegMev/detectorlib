/********************************************************************
* dict/TRestEventProcess.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error dict/TRestEventProcess.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "G__ci.h"
#include "FastAllocString.h"
extern "C" {
extern void G__cpp_setup_tagtableTRestEventProcess();
extern void G__cpp_setup_inheritanceTRestEventProcess();
extern void G__cpp_setup_typetableTRestEventProcess();
extern void G__cpp_setup_memvarTRestEventProcess();
extern void G__cpp_setup_globalTRestEventProcess();
extern void G__cpp_setup_memfuncTRestEventProcess();
extern void G__cpp_setup_funcTRestEventProcess();
extern void G__set_cpp_environmentTRestEventProcess();
}


#include "TObject.h"
#include "TMemberInspector.h"
#include "inc/TRestEventProcess.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__TRestEventProcessLN_TClass;
extern G__linked_taginfo G__TRestEventProcessLN_TBuffer;
extern G__linked_taginfo G__TRestEventProcessLN_TMemberInspector;
extern G__linked_taginfo G__TRestEventProcessLN_TObject;
extern G__linked_taginfo G__TRestEventProcessLN_TNamed;
extern G__linked_taginfo G__TRestEventProcessLN_TString;
extern G__linked_taginfo G__TRestEventProcessLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR;
extern G__linked_taginfo G__TRestEventProcessLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__TRestEventProcessLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR;
extern G__linked_taginfo G__TRestEventProcessLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__TRestEventProcessLN_TRestEvent;
extern G__linked_taginfo G__TRestEventProcessLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTBaselEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTBaselEdoublegR;
extern G__linked_taginfo G__TRestEventProcessLN_TVectorTlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TVectorTlEdoublegR;
extern G__linked_taginfo G__TRestEventProcessLN_TElementActionTlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TElementPosActionTlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTRow_constlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTRowlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTDiag_constlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTColumn_constlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTFlat_constlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTSub_constlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTSparseRow_constlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTSparseDiag_constlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTColumnlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTDiaglEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTFlatlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTSublEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTSparseRowlEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TMatrixTSparseDiaglEfloatgR;
extern G__linked_taginfo G__TRestEventProcessLN_TRestMetadata;
extern G__linked_taginfo G__TRestEventProcessLN_TRestEventProcess;

/* STUB derived class for protected member access */

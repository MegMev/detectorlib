
==========================================================
Date : 17th / March / 2016
Branch : examples
Author : Javier Galan/Hao Liang/Javier Gracia
Merge : #57
Title : Several changes on configuration, metadata, restG4 and restcore
==========================================================

# Major change on the structure of configuration directory.

Now config/ is distributed in diferent directories. Each directory related to a specific example of use of REST. An important change is that now the geometry of our detector setup is also stored inside the config directory tree 

We will find the following new directories inside :

* config/template (old myConfig.rml/mySetupTemplate.rml): It contains always a basic template for the first use inside REST, and for testing pourposes, any new metadata field should be always added to the template configuration.

* config/IAXODO : It contains geometry and setup configuration for IAXOD0 simulations.

* config/pandaXIII : Configuration files related to pandaXIII setup. It contains several geometry setups, traditional, resistive, etc.

The pandaXIII directory contains just prototyped configuration files under pandaXIII/templates/ directory. The pandaXIII directory can be populated with specific config files using the following scripts:
    
      - generateExamples.sh : produces specific metadata files.
      - cleanExamples.sh : removes configuration files generated with generateExamples.sh

# Additional changes on configuration

* Now the path to the geometry must be specicified inside restG4 section. We can then launch restG4 from anywhere we want. The geometry will be read from wherever we specify inside the configuration file (see template/config.rml).

* If REST_CONFIG is not specified (and the configuration files are not found in the directory from where we are launching REST) REST will define a internal configuration path pointing to `$REST_PATH/config/`. Thus, we must specify the configuration files inside REST relative to this path. Thus, if we do not define any REST_CONFIG, it will be `template/config.rml` or `pandaXIII/vessel/Th232.rml`.

* Added a script `replaceRMLVars.py` inside config/ directory. This script is used to replace enviromental variables in a prototyped configuration template substituting them for specific values.

---
Example : 
  replaceRMLVars.py inputFile.rml outputFile.rml [REST_NEVENTS=100000;REST_ISOTOPE=Tl208;REST_RUN=100]
---

# Changes on restG4

* Geometry setups have been removed from `restG4` and `restG4-build`. `CMakeLists.txt` has been updated accordingly. Geometry files are not copied anymore to `restG4-build`.

* Now `restG4` main will import the GDML geometry `TGeoManager::Import(GDMLfile)` and append it to the ROOT file generated.

* The `subEventID` definition has changed. Now a new parameter `subEventTimeDelay` has been added to `TRestG4Metadata`. If this parameter is not defined it will take by default 1 second. Events with timeStamp containned inside the `subEventTimeDelay` will be considered as a single `subEventID`.

# Changes on inputData

* inputData/definitions : New directory containning common definitions : `readouts.rml`, `materials.xml`, `gases.rml`
       In order to implement materials.xml in specific configurations we just use a symbolic link.
       materials.xml symlink has been added to the different geometries in the configuration directories.

     Note : Now we must specify full path when referencing a file. 

---
Example:
  <section gas nameref="Gas name" file="{REST_PATH}/inputData/definitions/gases.rml" >
---

* inputData/distributions : Added `HighEnergyGammaBiasing.root` distribution containning the resulting gamma after biasing in a water tank (see README).


# Changes in restcore

* The geometry `TRestGeometry::TGeoManager` is not anymore contained by `TRestRun`.
    Undetermined problems were found when doing `fGeometry->Write()`, problems with `TGeoManager` serialization?

* New method `GetEventWithID(Int_t id)`: This methods gets the tree entry correspoding to the event with `fEventID==id`.
    Thus, it fills the fInputEvent structure inside `TRestRun` with the event with `id`.

* A new member `vector <Int_t> fEventIDs;` has been added to the TRestRun members. 
    This is a vector that relates directly the entries on the eventTree with its eventID. 
    It is used in `GetEventWithID(id)` for quick pick-up of the required event with a specific `id`.

And other minor fixes.

==========================================================
Date : 15th / March / 2016
Branch : rawToSignalFix
Author : Javier Galan
Merge : #56
Title : Minor fix on rawToSignal process when the number of events to process given is zero.
==========================================================

When the number of eventsToProcess is defined as zero, TRestRun will redefine the number of events to process to a big number 2E9 in case there is no inputEventTree existing.

Small corrections regarding metadata management.

==========================================================
Date : 14th / March / 2016
Branch : smallFixes
Author : Javier Galan
Merge : #53
Title : Hotfix in electronDiffusion on random generation, and renamed method TRestGas::SetGasPressure.
==========================================================

TRestGas : method SetGasPressure has been renamed to SetPressure.

TRestElectronDiffusionProcess. TRandom number generator has been sustituted by TRandom3. Previously the random sequences for each process where always reproduced!

==========================================================
Date : 11th / March / 2016
Branch : translate
Author : Javier Gracia
Merge : #52
Title : Translate and rotation of TRestHits 
==========================================================

Implementation of TRestHitsRotateAndTraslateProcess.
It uses the TRestHits::RotateIn3D() and TRestHits::Traslate() methods.
The process requires as metadata the distance to shift in x, y and z-asis, and the angles around x, y and z axis.
An script to perform this operation is also icluded.

==========================================================
Date : 09th / March / 2016
Branch : fixRawToRoot  
Author : Javier Gracia
Merge : #51
Title : Minor modifications in TRestRun::ProcessEvents() 
==========================================================

If the input event is a binary file from the daq, the eventID and timeStamp of the output event Tree are not filled from the input event Tree.
Also, minor modifications in the RESTRAW_FEMINOSToRoot.C and RESTRAW_AFTERToRoot.C scripts, adapting them to TRestRun::ProcessEvents(), instead of TRestRun::Start()

==========================================================
Date : 08th / March / 2016
Branch : issue#16
Author : Javier Gracia
Merge : #50
==========================================================

Implementation of TRestGaussianConvolutionProcess. 
A TRestSignalEvent is transformed into another TRestSignalEvent.
It requires as metadata the sigma of the gaussian function and the number of simgas to which the convolution is extended.

==========================================================
Date : 02nd / March / 2016
Branch : W_value
Author : Javier Gracia
Merge : #45
==========================================================

Added W-values of different gases in definitions/gases.rml.
The name of the methods that call to this parameter (in electronDiffusionProcess and avalancheProcess) are changed from ionizationPotential to Wvalue

==========================================================
Date : 2nd / March / 2016
Branch : newInputData
Author : Gloria Luz√≥n/Javier Galan
Merge : #43
==========================================================

README files have been added and/or modified in inputData/distributions and inputData/generator. This files contain detailed descriptions of the files found under each folfer.

- Reorganized the inputData/distributions. 

- New generators found at inputData/generator

==========================================================
Date : 2nd / March / 2016
Branch : readout
Author : Javier Galan
Merge : #46
==========================================================

Fixed a bug in method TRestReadoutModule::TransformToPhysicalCoordinates.

The rotation-translation operations were in inverse order.

==========================================================
Date : 22th / February / 2016
Branch : issue#10
Author : Javier Galan
Merge : #38
==========================================================

Adding units support to REST.

== RESTCORE ==

- TRestSystemOfUnits

  + New namespace REST_Units implemented in TRestSystemOfUnits
  + Units and conversion are defined inside TRestSystemOfUnits
  + Implemented units of : Energy, Time, Distance and Field.

- TRestMetadata

  + Added new methods to otain a parameter value renormalized to the standard REST units, using the coming units="" field. Any parameter that requires units is now defined using value="VV" units="UU". This can be read using the new methods in TRestMetadata.
      *  GetDblParameterWithUnits
      *  Get2DVectorParameterWithUnits
      *  Get3DVectorParameterWithUnits

== TRESTMETADATA ==

   + RestG4 metadata classes have been modified to retrieve the parameter values using the specified unit.

   + myConfig.rml has been updated.

== RESTPROCESSES ==

   + Several processes have been updated to retrieve the process parameters using the new units system.

   + myConfig.rml has been updated.

==========================================================
Date : 22th / February / 2016
Branch : issue#4
Author : Javier Gracia
Merge : #37
==========================================================

SetEventID and SetEventTime is now done in TRestRun after processing the events.
The methods are removed from each event process.

==========================================================
Date : 19th / February / 2016
Branch : processes
Author : Javier Galan
Merge : #36
==========================================================

== RESTCORE ==

- TRestRun. 
    + SetVersion now takes the commit identificative number and writes it in the filename.
    + The version member value inside TRestRun is properly updated now each time we open an output file, so that the version from the input file is not necesarily preserved.

== RESTMETADATA ==

- TRestReadout. 
    + GetX and GetY now verify the case where we have 1-pixel strip. In order to return NaN in the undefined direction.
    + Fixed a small spelling bug in GetX() and GetY().

== RESTTOOLS ==

- TRestMesh now associates a NaN value to node 0.

== RESTEVENTS ==

- TRestSignal and TRestSignalEvent.
    + TGraph has been removed from TRestSignalEvent. 
    + TRestSignal implements now a GetGraph method and defines the fGraph. 
    + Changes in TRestSignalEvent::DrawEvent using the new GetGraph method.
    + Removed vector2 member that was just used to return a value in a method!!

- TRestHits and TRestHitsEvent. Added new methods:
    + GetDistanceToNode( n ) : Obtains the distance from the first node to node n.
    + GetVector( n, m ) : Gets the vector defined by n and m hits.
    + GetClosestHit( position ) : Gets the closest hit to position.
    + GetProjection( n, m, position ) : Returns the longitudinal and transversal projections of position in the vector created by n and m nodes.
    + GetMeanDistance() : Returns the mean energy-weighted position of the hits.
    + Revisited areXY methods and GetXArray methods to properly handle NaN values.
    + GetXZHits methods now preserve the NaN values of the hits.
    + GetDistance method verifies now if the hits are projected in a particular plane.
    

- TRestTrackEvent. Added new methods:
    + GetOriginTrackID() : Finds the original track from which this track derives (the one with parentID = 0).

- New event types. TRestLinearTrack and TRestLinearizedTrackEvent.
    + A linear track stores longitudinal and transversal projections of the track inside a TRestSignal structure.
    + It includes additional members : trackEnergy, meanPosition.

== RESTPROCESSES ==

- TRestElectronDiffusionProcess.
    + fGas is properly initialized to NULL solving problem of segmentation fault when we use a TBrowser to open a file containning this process.

- TRestPathMinimizationProcess. 
    + Added error handling in case Heldkarp minimization method fails.

- TRestTRackReductionProcess.
    + The event processing has been modified. The process now starts merging hits at the new parameter startingDistance. All nodes within this distance will be merged. The process continues increasing the merging distance multiplying this distance by the new metadata parameter distanceStepFactor. The process continues as soon as the number of nodes is below the metadata parameter maxNodes or the metadata parameter minimumDistance has not been reached.

- New process. TRestTrackLinearizationProcess. 
    + This process projects the origin tracks from a TRestEventTrack using the top layer tracks (or nodes) as reference. The result is stored in the new event types TRestLinearizedTrackEvent.

== SCRIPTS ==

- New script. RESTSIM_G4ToSignal : Concatenates several simulation processes to obtain a Signal event directly from a Geant4 event.
- New script. RESTSIM_G4ToTrack : Concatanates simulation and analysis processes to obtain the final processed track event.

== INPUTDATA/CONFIG ==

- Uploaded AGET signal response files.
- Updated myConfig.rml with new metadata parameters of TRestTrackReductionProcess.
- Updated myConfig.rml with a new section for the new process TRestTrackLinearizationProcess.



==========================================================
Date : 18th / February / 2016
Branch : iss#31
Author : Javier Gracia
Merge : #35
==========================================================

Added attachment to ElectronDiffusionProcess. It requires the parameter atachment in the config file.

==========================================================
Date : 18th / February / 2016
Branch : gasFiles
Author : Elisa Ruiz Choliz 
Merge : #34
==========================================================

Adding gas mixture files
Adding in inputData/gasFiles/
- pure Xe
- pure He
- Ar+iso; Xe+iso; Xe+CF4 mixtures - 0.5,1,2,3,5%
- Xe+TMA mixture ‚Äì 0.1,0.5,1,2,2.2,3,5%

Uploading in config/definitions/
- gases.rml

==========================================================
Date : 18th / February / 2016
Branch : iss#17
Author : Javier Gracia
Merge : #32
==========================================================

New process added. TRestAvalancheProcess (issue#17). It is a simple process that transmforms a TRestHitsEvent into another TRestHitsEvent. The primary electrons are multiplied by a gausian-distributed random factor, being the mean the detectorGain (metadata) and width scaled with the root of the energy taking as reference the energy resolution (metadata) at a given reference energy (metadata).

==========================================================
Date : 16th / February / 2016
Branch : iss#15
Author : Javier Gracia
Merge : #31
==========================================================

New signal process : TRestAddSignalNoiseProcess. It adds white gaussian noise to a TRestSignal. It converts a TRestSignal into another TRestSignal. The noise is introduced in electrons, not as an int number but as a float. It uses a metadata: noiseLevel that would define the noise standard deviation.

==========================================================
Date : 11th / February / 2016
Branch : restcoreUpdates
Author : Javier Galan
Merge : #30
==========================================================

- TRestRun. Added time measurement for event processing, writting and reading. The time measurement will print out on screen after it has finished processing all the events. It can be deactivated by commenting out the line #define TIME_MEASUREMENT. In future this might be given as an option for the compiler.

- TRestEvent. Added a new member, fOK. This member is initialized to true by the original input process (restG4 or restAGET, ...). The processes may set the status of the event to a BAD state using this member in case something went wrong processing that event.

==========================================================
Date : 9th / February / 2016
Branch : fastHitsToTrackProcess
Author : Javier Galan
Merge : #26
==========================================================

A new library has been created to store all the classes that are used as tools. TRestFFT has been moved to this new module libRestTools.so.

A new tool class TRestMesh has been created to help on definning node relation of a distribution of hits. A node is related to another node if it is found within 1-cell distance from it, then the nodes will be associated to the same group number.

For the moment node association to a group is defined by using 1-cell neighbour. This could be generalized in the future to n-cell neighbourds. Then we may increase cell granularity, and even define spherical node association topology.

A new process TRestFastHitsToTrackProcess has been added. This process uses TRestMesh to find the relation between the hits in order to define the tracks. The process requires to define the net size, net position and cell resolution (or size). See updates in myConfig.rml.


==========================================================
Date : 8th / February / 2016
Branch : configAndPaths 
Author : Javier Galan
Merge : #25
==========================================================

Issues #2 and #3 have been solved by this merge.

Changes in TRestMetadata related to config path definition and environmental values interpretation inside a config file.

New method TRestMetadata::ReplaceEnvironmentalVariables used to parse environmental variables inside a config file.

REST now will read configuration files from a path using the following priorities:

1) It will try to find first the configuration file inside REST_CONFIG

2) If it does not find the config file (or REST_CONFIG), it will try to find the config file in the directory where we are launching our executable

3) If still, it does not find the config file it will try to find it at REST_PATH/config.


Added CHANGELOG file. It should contain similar information to the information given when we do a merge request.


==========================================================
Date : 4th / February / 2016
Branch : iss25
Author : Javier Galan
Merge : #24
==========================================================

TRestMetadata, TRestReadout and TRestRun upgrades
+++++++++++++++++++++++++++++++++++++++++++++++++
Issues #18 , #19 and #25 have been solved by the merge.

TRestMetadata
-------------

The FOR loop implementation in config files has been modified. The tag "to" now includes the last value in the iteration.
<for from="1" to="N" step="1" > means it will do 1,2,...,N

TRestRun
--------

fRunIndex has been removed and fParentRunNumber has been implemented.
The run filename is now by default :
Run_experiment_user_processName_Tag_runNumber_parentNumber_codeVersion.root

Modifications related to overwrite option.
Now runNumber accepts option runNumber="auto". It will take by default an increasing value stored in inputData/runNumber.

TRestReadoutModule
------------------

New methods have been implemented

TRestReadoutMapping
-------------------

Solved bug related to mapping of module boundaries.

TRestReadoutPixel
-----------------

Solved bug related to pixel boundaries precision. Now pixel size is increased by a small size delta.
